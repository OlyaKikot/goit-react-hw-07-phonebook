{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","App.module.css","components/ContactList/ContactList.module.css","redux/contacts-operations.js","components/spiner.js","redux/contacts-selector.js","components/ContactForm/ContactForm.js","redux/contacts-actions.js","components/Filter/Filter.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","axios","defaults","baseURL","fetchContacts","createAsyncThunk","a","get","data","addContacts","contact","post","deleteContacts","id","delete","spin","keyframes","Spinner","CgSpinner","defaultProps","size","getValueFilter","state","contacts","filter","getItems","items","getIsLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","ContactForm","dispatch","useDispatch","useSelector","isLoading","useState","setName","number","setNumber","className","s","form","onSubmit","event","preventDefault","find","alert","input","type","onChange","currentTarget","value","pattern","title","required","button","spinner","addContact","createAction","payload","nanoid","deleteContact","changeFilter","Filter","text","e","contactsActions","target","ContactListItem","item","onClick","ContactList","visibleContacts","useEffect","list","map","App","mainTitle","createReducer","fulfilled","_","actions","pending","rejected","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a95ba785.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__4_zCy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactListItem_button__2PnHh\",\"item\":\"ContactListItem_item__3HiFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"App_mainTitle__1KHQf\",\"title\":\"App_title__37URd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2X57S\"};","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = \"https://6187c264057b9b00177f9a95.mockapi.io/api/v1\";\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async () => {\r\n    try {\r\n      const { data } = await axios.get(\"/contacts\");\r\n      return data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n);\r\n\r\nexport const addContacts = createAsyncThunk(\r\n  \"contacts/addContacts\",\r\n  async (contact) => {\r\n    try {\r\n      // console.log(state.contact);\r\n      const { data } = await axios.post(\"/contacts\", contact);\r\n\r\n      return data;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteContacts = createAsyncThunk(\r\n  \"contacts/deleteContacts\",\r\n  async (id) => {\r\n    try {\r\n      const { data } = await axios.delete(`/contacts/${id}`);\r\n      // console.log(data);\r\n      return data.id;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  }\r\n);\r\n","import styled from \"@emotion/styled/macro\";\r\nimport { keyframes } from \"@emotion/react\";\r\nimport { CgSpinner } from \"react-icons/cg\";\r\n\r\nconst spin = keyframes`\r\n0% {\r\n  transform: rotate(0deg);\r\n}\r\n100% {\r\n  transform: rotate(1turn);\r\n}\r\n`;\r\n\r\nexport const Spinner = styled(CgSpinner)`\r\n  animation: ${spin} 0.85s linear infinite;\r\n`;\r\n\r\nSpinner.defaultProps = {\r\n  size: 40,\r\n};\r\n","import { createSelector } from \"reselect\";\r\nexport const getValueFilter = (state) => state.contacts.filter;\r\nexport const getItems = (state) => state.contacts.items;\r\nexport const getIsLoading = (state) => state.contacts.loading;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getItems, getValueFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addContacts } from \"../../redux/contacts-operations\";\nimport { Spinner } from \"../../components/spiner\";\nimport { useSelector } from \"react-redux\";\nimport { getItems, getIsLoading } from \"../../redux/contacts-selector\";\n\nimport s from \"../ContactForm/ContactForm.module.css\";\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n\n  const items = useSelector(getItems);\n  const isLoading = useSelector(getIsLoading);\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const onChange = (event) => {\n    setName(event.currentTarget.value);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (items.find((contact) => name === contact.name)) {\n      setName(\"\");\n      setNumber(\"\");\n      return alert(`${name} is already in the contacts`);\n    }\n\n    dispatch(addContacts({ name, number }));\n    setName(\"\");\n    setNumber(\"\");\n  };\n  const onChangeNumber = (event) => {\n    setNumber(event.currentTarget.value);\n  };\n  return (\n    <>\n      <form className={s.form} onSubmit={onSubmit}>\n        <p className={s.name}>Name</p>\n        <input\n          className={s.input}\n          type=\"text\"\n          onChange={onChange}\n          value={name}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <p className={s.name}>Number</p>\n        <input\n          className={s.input}\n          type=\"tel\"\n          onChange={onChangeNumber}\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n\n        <button className={s.button} type=\"onSubmit\">\n          Add contact\n        </button>\n      </form>\n      {isLoading && <Spinner className={s.spinner} size={100} />}\n    </>\n  );\n}\n\nexport default ContactForm;\n","import { nanoid } from \"nanoid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contacts/add\", (name, number) => ({\n  payload: { name, number, id: nanoid() },\n}));\n\nconst deleteContact = createAction(\"contacts/delete\");\nconst changeFilter = createAction(\"contacts/filter\");\n\nexport default { addContact, deleteContact, changeFilter };\n","import s from \"./Filter.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { getValueFilter } from \"../../redux/contacts-selector\";\n\nimport contactsActions from \"../../redux/contacts-actions\";\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(getValueFilter);\n  return (\n    <>\n      <p className={s.text}>Find contacts by name</p>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={(e) => dispatch(contactsActions.changeFilter(e.target.value))}\n      ></input>\n    </>\n  );\n}\n\nexport default Filter;\n","import s from \"../ContactListItem/ContactListItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContacts } from \"../../../redux/contacts-operations\";\n\nfunction ContactListItem({ contact }) {\n  const dispatch = useDispatch();\n  return (\n    <li className={s.item}>\n      <p>\n        {contact.name}: {contact.number}\n      </p>\n\n      <button\n        className={s.button}\n        id={contact.id}\n        type=\"button\"\n        onClick={() => dispatch(deleteContacts(contact.id))}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nexport default ContactListItem;\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport s from \"./ContactList.module.css\";\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\nimport { fetchContacts } from \"../../redux/contacts-operations\";\r\n\r\nimport { getVisibleContacts } from \"../../redux/contacts-selector\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction ContactList() {\r\n  const dispatch = useDispatch();\r\n  const visibleContacts = useSelector(getVisibleContacts);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <ul className={s.list}>\r\n        {visibleContacts.map((contact) => (\r\n          <ContactListItem contact={contact} key={contact.id} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import ContactForm from \"./components/ContactForm/\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport s from \"./App.module.css\";\n\nfunction App() {\n  return (\n    <>\n      <h1 className={s.mainTitle}>Phonebook</h1>\n      <ContactForm />\n      <Filter />\n      <h2 className={s.title}>Contacts</h2>\n      <ContactList />\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contacts-actions\";\nimport {\n  addContacts,\n  deleteContacts,\n  fetchContacts,\n} from \"./contacts-operations\";\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContacts.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContacts.fulfilled]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContacts.pending]: () => true,\n  [addContacts.fulfilled]: () => false,\n  [addContacts.rejected]: () => false,\n  [deleteContacts.pending]: () => true,\n  [deleteContacts.fulfilled]: () => false,\n  [deleteContacts.rejected]: () => false,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts-reducer\";\n\nconst middleware = [...getDefaultMiddleware()];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\n\nimport { Provider } from \"react-redux\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1zfaH\",\"name\":\"ContactForm_name__2velZ\",\"input\":\"ContactForm_input__BNuZm\",\"button\":\"ContactForm_button__E76a-\",\"spinner\":\"ContactForm_spinner__3qAaK\"};"],"sourceRoot":""}